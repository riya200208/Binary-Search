class Solution {
    public int minCapability(int[] nums, int t) {
        int i=0,j=0,n = nums.length,ans=-1;
        for(int el:nums)
            j = Math.max(j,el);
        
        while(i<=j)
        {
            int mid = i+(j-i)/2;
            int dp[]=new int[n];
            for(int k=0;k<n;k++)
            {
                if(k == 0)
                {
                    if(nums[k]<=mid)
                    {
                        dp[k]=1;
                    }
                }
                else
                {
                     if(nums[k]<=mid)
                    {
                        dp[k]=Math.max(dp[k-1],(k>=2?dp[k-2]+1:1));
                    }
                    else
                        dp[k]=dp[k-1];
                }
                
            }
            if(dp[n-1]>=t)
            {
                ans = mid;
                j = mid-1;
            }
            else
                i=mid+1;
        }
        return ans;
    }
}
//Link: https://leetcode.com/problems/house-robber-iv/description/
